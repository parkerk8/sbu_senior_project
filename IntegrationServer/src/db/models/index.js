'use strict'
// Autogenerated using Sequelize-CLI
const fs = require('fs')
const path = require('path')
const Sequelize = require('sequelize')
const basename = path.basename(__filename)
const env = process.env.NODE_ENV || 'development'
const config = require(__dirname + '/../config/db.config.json')[env]
const db = {}

/* Connects to the database. */
let sequelize
if (config.use_env_variable) {
  sequelize = new Sequelize(process.env[config.use_env_variable], config)
} else {
  sequelize = new Sequelize(config.database, config.username, config.password, config)
}

/* Read all the files in the directory and then filter them to only include the files that end in.js.
Then require the funciton exported by those files and pass in the necessary info into the funciton to
generate return a model. Add the generated model to the db object to be exported. */
fs
  .readdirSync(__dirname)
  .filter(file => {
    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js')
  })
  .forEach(file => {
    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes)
    db[model.name] = model
  })

/* Loop through the db object and check if each model has an associate
function. If it does, calls the associate function. Since we don't have any associations, so this is never used */
Object.keys(db).forEach(modelName => {
  if (db[modelName].associate) {
    db[modelName].associate(db)
  }
})

/* Export the db object. */
db.sequelize = sequelize
db.Sequelize = Sequelize

module.exports = db
